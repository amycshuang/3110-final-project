### Starting build.
# Target: main.mli.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules main.ml > main.ml.depends # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o command.cmi command.mli # cached
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules gui.mli > gui.mli.depends # cached
# Target: pokemon.mli.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:mli, file:pokemon.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules pokemon.mli > pokemon.mli.depends # cached
# Target: pokemon.cmi, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:mli, file:pokemon.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o pokemon.cmi pokemon.mli # cached
# Target: state.mli.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules state.mli > state.mli.depends # cached
# Target: player.mli.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules player.mli > player.mli.depends # cached
# Target: player.cmi, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o player.cmi player.mli # cached
# Target: state.cmi, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o state.cmi state.mli # cached
# Target: gui.cmi, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o gui.cmi gui.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o main.cmo main.ml # cached
# Target: command.ml.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o command.cmo command.ml # cached
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules gui.ml > gui.ml.depends # cached
# Target: gui.cmo, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o gui.cmo gui.ml # cached
# Target: pokemon.ml.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:ml, file:pokemon.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules pokemon.ml > pokemon.ml.depends # cached
# Target: pokemon.cmo, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:pokemon.cmo, file:pokemon.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o pokemon.cmo pokemon.ml # cached
# Target: state.ml.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o state.cmo state.ml # cached
# Target: player.ml.depends, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), extension:ml, file:player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -modules player.ml > player.ml.depends # cached
# Target: player.cmo, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics -o player.cmo player.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(graphics), package(ounit2), package(qcheck), package(yojson), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package ounit2 -package qcheck -package yojson -package ANSITerminal -package graphics pokemon.cmo command.cmo player.cmo state.cmo gui.cmo main.cmo -o main.byte # cached
# Compilation successful.
